"""Add description to Event

Revision ID: 737a52e22ded
Revises: 
Create Date: 2025-07-10 06:34:02.941570

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '737a52e22ded'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('guest')
    op.drop_table('chanda')
    with op.batch_alter_table('event', schema=None) as batch_op:
        batch_op.add_column(sa.Column('location', sa.String(length=200), nullable=True))
        batch_op.add_column(sa.Column('description', sa.Text(), nullable=True))
        batch_op.alter_column('name',
               existing_type=sa.VARCHAR(length=100),
               nullable=False)
        
    op.execute("ALTER TABLE event ALTER COLUMN date TYPE DATE USING date::date;")
               

    with op.batch_alter_table('expense', schema=None) as batch_op:
        batch_op.add_column(sa.Column('notes', sa.String(length=200), nullable=True))
        batch_op.alter_column('category',
               existing_type=sa.VARCHAR(length=100),
               nullable=False)
        batch_op.alter_column('amount',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=False)
        batch_op.drop_column('remarks')

    with op.batch_alter_table('member', schema=None) as batch_op:
        batch_op.alter_column('name',
               existing_type=sa.VARCHAR(length=100),
               nullable=False)
        batch_op.alter_column('phone',
               existing_type=sa.VARCHAR(length=15),
               type_=sa.String(length=20),
               nullable=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('member', schema=None) as batch_op:
        batch_op.alter_column('phone',
               existing_type=sa.String(length=20),
               type_=sa.VARCHAR(length=15),
               nullable=True)
        batch_op.alter_column('name',
               existing_type=sa.VARCHAR(length=100),
               nullable=True)

    with op.batch_alter_table('expense', schema=None) as batch_op:
        batch_op.add_column(sa.Column('remarks', sa.VARCHAR(length=200), autoincrement=False, nullable=True))
        batch_op.alter_column('amount',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True)
        batch_op.alter_column('category',
               existing_type=sa.VARCHAR(length=100),
               nullable=True)
        batch_op.drop_column('notes')

    with op.batch_alter_table('event', schema=None) as batch_op:
        batch_op.alter_column('date',
               existing_type=sa.Date(),
               type_=sa.VARCHAR(length=20),
               nullable=True)
        batch_op.alter_column('name',
               existing_type=sa.VARCHAR(length=100),
               nullable=True)
        batch_op.drop_column('description')
        batch_op.drop_column('location')

    op.create_table('chanda',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('member_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('event_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('own_payment', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('collected_amount', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['event_id'], ['event.id'], name=op.f('chanda_event_id_fkey')),
    sa.ForeignKeyConstraint(['member_id'], ['member.id'], name=op.f('chanda_member_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('chanda_pkey'))
    )
    op.create_table('guest',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('phone', sa.VARCHAR(length=15), autoincrement=False, nullable=True),
    sa.Column('address', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('event_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('amount', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['event_id'], ['event.id'], name=op.f('guest_event_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('guest_pkey'))
    )
    # ### end Alembic commands ###
